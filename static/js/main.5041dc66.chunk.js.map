{"version":3,"sources":["redux/contacts/contactsAction.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["addTask","createAction","nameResult","numberResult","payload","task","id","uuidv4","name","number","removeTask","nameCheck","ContactForm","state","handleChange","e","target","value","setState","onSubmit","preventDefault","props","onAddTask","className","this","type","onChange","Component","mapDispatchToProps","contactsAction","connect","onRemove","onVisible","contacts","filter","toLowerCase","includes","component","map","visibleTask","key","classNames","timeout","onClick","App","contactsTools","createReducer","action","contact","filterTools","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5041dc66.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addTask = createAction('contacts/add', (nameResult, numberResult) => ({\r\n  payload: {\r\n    task: {\r\n      id: uuidv4(),\r\n      name: nameResult,\r\n      number: numberResult,\r\n    },\r\n  },\r\n}));\r\nconst removeTask = createAction('contacts/remove');\r\n\r\nconst nameCheck = createAction('contacts/check');\r\n\r\nexport default {\r\n  removeTask,\r\n  addTask,\r\n  nameCheck,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\nimport './ContactForm.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddTask(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-form\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"contact-form_style\">\r\n            <p className=\"contact-form_description\">Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              className=\"contact-form_label\"\r\n            ></input>\r\n            <p className=\"contact-form_description\">Number</p>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              name=\"number\"\r\n            ></input>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"contact-form_button\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddTask: contactsAction.addTask,\r\n  handleChange: contactsAction.nameCheck,\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\n\r\nimport './ContactList.css';\r\n\r\nconst Contacts = ({ value, onChange, onVisible, onRemove }) => (\r\n  <div className=\"find-input\">\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        onChange={e => onChange(e.target.value)}\r\n        value={value}\r\n        name=\"filter\"\r\n      ></input>\r\n    </label>\r\n    <TransitionGroup component=\"ul\">\r\n      {onVisible.map(visibleTask => (\r\n        <CSSTransition key={visibleTask.id} classNames=\"list\" timeout={250}>\r\n          <li className=\"name-list\">\r\n            {visibleTask.name}:{visibleTask.number}\r\n            <button\r\n              type=\"button\"\r\n              className=\"close-button\"\r\n              onClick={() => onRemove(visibleTask.id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  onVisible: state.contacts.contacts.filter(task =>\r\n    task.name.toLowerCase().includes(state.contacts.filter.toLowerCase()),\r\n  ),\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRemove: contactsAction.removeTask,\r\n  onChange: contactsAction.nameCheck,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div>\n      <div className=\"phonebook\">\n        <h2 className=\"phonebook-head\">Phonebook</h2>\n      </div>\n      <ContactForm />\n      <h2 className=\"contacts-styles\">Contacts</h2>\n      <ContactsList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactsAction';\r\n\r\nconst contactsTools = createReducer([], {\r\n  [contactsAction.addTask]: (state, action) => [...state, action.payload.task],\r\n  [contactsAction.removeTask]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filterTools = createReducer('', {\r\n  [contactsAction.nameCheck]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsTools,\r\n  filter: filterTools,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}